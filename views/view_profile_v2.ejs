<link rel="stylesheet" href="/css/profile.css">

<div class="profile-container-v2" data-user-id="<%= profile._id %>">
    <div class="profile-card-v2">
        <!-- Profile Header -->
        <div class="profile-header-v2">
            <img src="<%= (profile.photos && profile.photos.length > 0) ? profile.photos[0].url : '/img/default-cover.jpg' %>" alt="Cover Photo" class="cover-photo">
            <div class="profile-header-content-v2">
                <img src="<%= (profile.profileImage && profile.profileImage.url) ? profile.profileImage.url : '/img/default-avatar.png' %>" alt="<%= profile.displayName %>" class="profile-avatar-v2">
                <h1 class="profile-name-v2">
                    <%= profile.displayName %>, <%= profile.age %>
                    <% if (profile.isVerified) { %> <img src="/img/verified-badge.svg" alt="Verified" class="verified-badge-icon"> <% } %>
                </h1>
            </div>
        </div>

        <!-- Profile Actions -->
        <div class="profile-actions-v2">
            <button class="action-btn like-btn"><i class="fas fa-heart"></i> Like</button>
            <button class="action-btn dislike-btn"><i class="fas fa-times"></i> Dislike</button>
            <a href="/chats/<%= profile._id %>" class="action-btn message"><i class="fas fa-comments"></i> Message</a>
            <button class="action-btn report-btn"><i class="fas fa-flag"></i> Report</button>
            <button class="action-btn block-btn"><i class="fas fa-ban"></i> Block</button>
        </div>

        <!-- Profile Body -->
        <div class="profile-body-v2">
            <!-- Left Column -->
            <div class="profile-main-col-v2">
                <div class="profile-widget-v2">
                    <h3>About Me</h3>
                    <p><%= profile.bio %></p>
                </div>
                <div class="profile-widget-v2">
                    <h3>Gallery</h3>
                    <div class="gallery-grid-v2">
                        <% if (profile.photos && profile.photos.length > 0) { %>
                            <% profile.photos.forEach(photo => { %>
                                <div class="gallery-item-v2">
                                    <img src="<%= photo.url %>" alt="Gallery photo">
                                </div>
                            <% }) %>
                        <% } else { %>
                            <p>This user has not uploaded any photos yet.</p>
                        <% } %>
                    </div>
                </div>
            </div>

            <!-- Right Column (Sidebar) -->
            <div class="profile-sidebar-col-v2">
                <div class="profile-widget-v2">
                    <h3>Details</h3>
                    <ul class="details-list-v2">
                        <li><strong>Location:</strong> <span><%= profile.location %></span></li>
                        <li><strong>Work:</strong> <span><%= profile.work %></span></li>
                        <li><strong>Gender:</strong> <span><%= profile.gender %></span></li>
                    </ul>
                </div>
                <div class="profile-widget-v2">
                    <h3>Interests</h3>
                    <div class="interests-tags-v2">
                        <% if (profile.interests && profile.interests.length > 0) { %>
                            <% profile.interests.forEach(interest => { %>
                                <span class="interest-tag"><%= interest %></span>
                            <% }) %>
                        <% } else { %>
                            <p>No interests listed.</p>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
document.addEventListener('DOMContentLoaded', () => {
    const container = document.querySelector('.profile-container-v2');
    const userId = container.dataset.userId;

    container.addEventListener('click', async (e) => {
        const target = e.target.closest('.action-btn');
        if (!target) return;

        if (target.classList.contains('like-btn') || target.classList.contains('dislike-btn')) {
            const isLike = target.classList.contains('like-btn');
            const url = isLike ? `/discover/like/${userId}` : `/discover/dislike/${userId}`;

            try {
                const response = await fetch(url, { method: 'POST' });
                const result = await response.json();
                if (result.match) {
                    Swal.fire('It\'s a Match!', `You and ${'<%= profile.displayName %>'} have liked each other.`, 'success');
                } else {
                    Swal.fire(isLike ? 'Liked!' : 'Disliked!', 'Your choice has been recorded.', 'success');
                }
            } catch (err) {
                Swal.fire('Error', 'Something went wrong.', 'error');
            }
        }

        if (target.classList.contains('report-btn')) {
            const { value: reason } = await Swal.fire({
                title: 'Report <%= profile.displayName %>',
                input: 'textarea',
                inputPlaceholder: 'Please provide a reason for the report...',
                inputAttributes: { 'aria-label': 'Reason for report' },
                showCancelButton: true,
                confirmButtonText: 'Submit Report'
            });

            if (reason) {
                try {
                    await fetch(`/users/${userId}/report`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ reason })
                    });
                    Swal.fire('Reported!', 'Thank you for your feedback.', 'success');
                } catch (err) {
                    Swal.fire('Error', 'Could not submit report.', 'error');
                }
            }
        }

        if (target.classList.contains('block-btn')) {
            const result = await Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to see this profile, and they won't see yours.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                confirmButtonText: 'Yes, block them!'
            });

            if (result.isConfirmed) {
                try {
                    await fetch(`/users/${userId}/block`, { method: 'POST' });
                    Swal.fire('Blocked!', '<%= profile.displayName %> has been blocked.', 'success').then(() => {
                        window.location.href = '/discover';
                    });
                } catch (err) {
                    Swal.fire('Error', 'Could not block user.', 'error');
                }
            }
        }
    });
});
</script>